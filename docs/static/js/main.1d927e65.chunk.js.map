{"version":3,"sources":["id_rsa.pub.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["pubkey","checkKey","message","publicKeyString","a","length","Error","openpgp","cleartextMessage","signedMessageAsync","publicKeyAsync","armoredKey","Promise","all","signedMessage","publicKey","verifyOptions","verificationKeys","expectSigned","result","signatures","verified","PGPState","console","log","error","ResultView","props","className","child","Failed","src","getResultView","state","Hidden","Loading","Verified","App","useState","setMessage","undefined","setResult","useEffect","then","catch","err","onChange","evt","target","value","autoFocus","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d927e65.chunk.js","sourcesContent":["export const pubkey = `-----BEGIN PGP PUBLIC KEY BLOCK-----\n\n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\nx8P/zfoWtm0euvsEBQ==\n=OYMN\n-----END PGP PUBLIC KEY BLOCK-----\n`;","import React from 'react';\nimport { FC, ReactElement, useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { pubkey } from './id_rsa.pub';\nimport * as openpgp from 'openpgp';\n\nasync function checkKey(message: string, publicKeyString: string) : Promise<boolean> {\n  if (!message || message.length === 0) {\n    throw new Error(\"Message is empty\");\n  }\n  let signedMessageAsync = await openpgp.readCleartextMessage({ cleartextMessage: message });\n  let publicKeyAsync = openpgp.readKey({ armoredKey: publicKeyString });\n  let [signedMessage, publicKey] = await Promise.all([signedMessageAsync, publicKeyAsync]);\n  let verifyOptions: any = {\n      message: signedMessage,\n      verificationKeys: publicKey,\n      expectSigned: true\n  };\n  let result = await openpgp.verify(verifyOptions);\n  return await result.signatures[0].verified;\n}\n\nvar msg = `\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\nProof of 1F35C GitHub User Ownership\nSigned for: ABC\nDate:Thu, 16 Dec 2021 00:30:34 GMT\n-----BEGIN PGP SIGNATURE-----\n\nwsFzBAEBCAAGBQJhuoiqACEJEAewVL2K4IIUFiEEO0G9ic1OqZ/j/7ZHB7BU\nvYrgghRkzxAAmwuLOWhwQmsKhoyLEbl84dedim1cX2spOOWk4cVwzuYstyza\n7EPW2txXGwEqGk8jgN+rEAaac9EFPLqBIn+PI+ukKx0l3K9GUzvYYBHTU3QF\nkECqHPsfmJCoF54Ce30fLoIkN/PxmJVBDrWlhJ0ORURRGKntGaX0WC8iDVBL\n+k3wBjYEtFpB2S8FYUA/ZWB2HPaKb0tNCsf2xjPNlgfHsme6OfV5Qo2t7Hu6\n8cHsOfOypwIO6+sDK0HGpPfb6htW55K/xRsJuxYvEw0ySamcQz3Q+CDPiydR\nEOgz8PqW+ubgJN6ydCyCsx/mG6KfFSvIqzo2iJdhb7pJtKc/3yFftVhQT9uO\n1wW77+vUEYDfjqBIESyWxxOMu4HKjHiPqRuWaIuf7jwc1hXGYNc/xR4/nkdt\nGkOQs+8t/sBC2Le2/JYbBhV+YCIX5GmT7O61repBLyOpClmJNeKndjBXi90K\ngB2M73DAGA9awglyJ/8//n5bkjuAoLx1NgFbc2qadcVvti0xL7GT8PEBTa6W\nK8N0DO20m7ZNdvMp2Y/3GyVhTUiOhka8QfoEQJGBWHLPJQnim7sCFYACKyie\nBWfO5+se4urGfJG1FfPHd791vOlKTe2gPQcig3xC6x1VFDb7OFyrmzdw/K6+\nvoeAecfg1DvkkipjAl7RLnqwRzh/KgLBlQk=\n=6nuz\n-----END PGP SIGNATURE-----\n`;\n\nvar msg_error = `\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA256\n\nProof of 1F35C GitHub User Ownership\nSigned for: ABC\nDate:Thu, 16 Dec 2021 00:27:44 GMT\n-----BEGIN PGP SIGNATURE-----\n\nwsFzBAEBCAAGBQJhuogAACEJECPOE7yfPkrZFiEEnKKyrnlckw7SKRSKI84T\nvJ8+StktLRAAmuYXgCdF7DcbjBNoEJuvJSVM/2Tx+IBoaO/3ohMvEIo6cUkM\nCbxtrqY+trBZN304Z6Rt0QTD1+P3p4AWUaXvHsdb/nkSzBbAojGSLiMpUY2y\nVCiX0sZFs6PQbFULbglVobLq9TwAnubWgtTPxV8/1W6wztBVSyEsh0YXN+Qr\nAtuYfZTzBT4qtXFJllOqITC/ShV+rhi/K8EeTa3XyN6D701ycqxlW+mdi/PY\n8nRivqk6Kv6BkH0dFlIi/IPdaNmUQGYR3wbENW5uR5gaXSTRJDnR2rlTSGMP\nT88vs9l3l7zv2LS3xxxnuF5Z4iBiXM1aANqe7l4vbJ4dPrx1mzkugozaS8Sh\nNSBmkMds8PmHYADa3QnW/iGqXYTVXKMMJfH94Z3mENXjyFaZmHOp+o9OcOpF\nBRqN/ADN+cHvaFYgEMpAKdtNVe0vYUUewBvmA+7jX3uSPKaTORj75l2WCPzl\nfK7o+wtwpAqme+bhJsTKg7c54xKFKtp9WLRWfj/8hjPByj9cBeSsvPCUBb+s\n6nOH7yTp29MQu/Um2Ub0liC4TIuyIzDGwu9sCxWsCwuBrV5UcPt5nxmOf9CK\ntDYb9YrWPtC4Do3uVOP4G9SlHVuj3hyYcywVyHnu8ej7S95Yh6ksNWpeDWSF\nfZCzhASsUl6WZSKZDSPOGV5z6WbZifJbnEA=\n=ppKB\n-----END PGP SIGNATURE-----\n`;\n\n(async() => {\n  try {\n    console.log(await checkKey(msg, pubkey));\n  } catch(err) {\n    console.error(err);\n  }\n})();\n\nenum PGPState {\n  Hidden,\n  Loading,\n  Verified,\n  Failed\n};\n\ntype PGPResult = {\n  state: PGPState;\n  error: string | undefined;\n};\n\nconst ResultView = (props: { child: JSX.Element }): JSX.Element => {\n  return (\n    <div className=\"box-section centered loading\">\n      { props.child }\n    </div>\n  );\n};\nconst Loading = (): JSX.Element => {\n  return (\n    <div>\n      <img className=\"icon\" src=\"stopwatch.svg\" />\n      <br />\n      <span className=\"status\">\n        Loading...\n      </span>\n    </div>\n  );\n};\n\nconst Verified = (): JSX.Element => {\n  return (\n    <div>\n    <img className=\"icon\" src=\"success.svg\" />\n    <br />\n    <span className=\"status\">\n      Verified\n    </span>\n    </div>\n  );\n}\n\nconst Failed = ({ error } : { error: string }): JSX.Element => {\n  return (\n    <div>\n      <img className=\"icon\" src=\"error.svg\" />\n      <br />\n      <span className=\"status\">\n        Verification Failed\n      </span>\n      <br />\n      <span className=\"detail\">\n        { error }\n      </span>\n    </div>\n  );\n}\n\nfunction getResultView(result: PGPResult): JSX.Element {\n  switch (result.state) {\n    case PGPState.Hidden:\n      return (<div />);\n    case PGPState.Loading:\n      return ResultView({ child: Loading() });\n      break;\n    case PGPState.Verified:\n      return ResultView({ child: Verified() });\n      break;\n    case PGPState.Failed:\n      return ResultView({ child: Failed({ error: result.error ?? \"unknown\" }) });\n      break;\n  }\n}\n\nfunction App(): ReactElement {\n  let [message, setMessage] = useState<string | null>(null);\n  let [result, setResult] = useState<PGPResult>({ state: PGPState.Hidden, error: undefined });\n\n  useEffect(() => {\n    if (message !== null) {\n      setResult({ state: PGPState.Loading, error: undefined });\n      checkKey(message, pubkey)\n          .then(() => {\n            setResult({ state: PGPState.Verified, error: undefined });\n          })\n          .catch((err) => {\n            setResult({ state: PGPState.Failed, error: err.message });\n          });\n    }\n  }, [message]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"box\">\n\t\t\t\t<div className=\"box-section\">\n\t\t\t\t\t<h1>Signature Verifier</h1>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"box-section\">\n\t\t\t\t\tPlease paste your signed signature below:\n\t\t\t\t\t<textarea className=\"signature-field\" onChange={(evt) => {setMessage(evt.target.value);}} autoFocus={true} />\n\t\t\t\t</div>\n\t\t\t\t{getResultView(result)}\n\t\t\t</div>\n      <div className=\"box\">\n      Description of this webpage\n      </div>\n    </div>\n  );\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}